"""
Django settings for Arc_Ai project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from django.conf import settings




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@48z=ulo(xn$@1=*m3$lej!0sow9m^%&j*p4*%f%(g7-pf$q=x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',  # Your core app

    'django.contrib.sites',  # Required for allauth
    'allauth',  # Required for allauth
    'allauth.account',  # Required for allauth
    'allauth.socialaccount',  # Required for allauth
    'allauth.socialaccount.providers.google',  # Google provider for allauth
    # 'allauth.socialaccount.providers.facebook',  # Facebook provider for allauth
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'allauth.account.middleware.AccountMiddleware',  # Required for allauth
    'core.middleware.PreventLoginBackMiddleware',  # Custom middleware to prevent back navigation
]

ROOT_URLCONF = 'Arc_Ai.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
        },
    },
]

WSGI_APPLICATION = 'Arc_Ai.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# ...existing code...
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',  # Use psycopg2 for PostgreSQL
#         'NAME': 'test',
#         'USER': 'postgres',  # Default PostgreSQL user
#         'PASSWORD': 'herald123',
#         'HOST': 'localhost',
#         'PORT': '5432',
#     }
# }
# ...existing code...

# ...existing code...
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# ...existing code...


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SITE_ID = 1  # Required for allauth


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "core", "static"),  # Alternative way to define the path
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




# ==================================================================================
# ============================== CUSTOM MADE SETTINGS ==============================
# ==================================================================================

AUTHENTICATION_BACKENDS = [
    'core.accounts.backends.EmailBackend',  # Your custom backend
    'django.contrib.auth.backends.ModelBackend',  # Keep default as fallback

    'allauth.account.auth_backends.AuthenticationBackend',  # Required for allauth / Google Login

    # Add other backends if needed
]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '808716703581-59101hglg290bq2gagv28filru7j8q59.apps.googleusercontent.com',
            'secret': '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',
            'key': ''
        }
    },
}



LOGIN_URL = 'core:login' # URL for login page
LOGOUT_URL = 'logout' # URL for logout page
LOGIN_REDIRECT_URL = '/home/' # URL to redirect after login
ACCOUNT_LOGOUT_REDIRECT_URL = 'core:login' # URL to redirect after logout

GOOGLE_CLIENT_SECRETS_FILE = os.path.join(settings.BASE_DIR, 'secret', 'client_secret.json')
